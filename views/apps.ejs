<!-- views/apps.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Apps | Account Management</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    .account-header {
      background: linear-gradient(135deg, #2196f3 0%, #21cbf3 100%);
      color: white;
      padding: 2rem 0;
    }
    .nav-pills .nav-link {
      border-radius: 50px;
      margin-right: 0.5rem;
      margin-bottom: 0.5rem;
    }
    .nav-pills .nav-link.active {
      background-color: #667eea;
    }
    .card {
      border: none;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      margin-bottom: 1.5rem;
      transition: all 0.3s ease;
    }
    .card:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }
    .app-card {
      border-radius: 15px;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      position: relative;
      overflow: hidden;
      cursor: pointer;
      transition: all 0.3s ease;
      background: linear-gradient(135deg, #ffffff 0%, #f8f9ff 100%);
      border: 2px solid #e9ecef;
    }
    .app-card:hover {
      border-color: #2196f3;
      background: linear-gradient(135deg, #f8f9ff 0%, #e3f2fd 100%);
      transform: translateY(-5px);
    }
    .app-card.favorite {
      border-color: #ffc107;
      background: linear-gradient(135deg, #fff9e6 0%, #fff3cd 100%);
    }
    .app-icon {
      width: 64px;
      height: 64px;
      border-radius: 12px;
      background: linear-gradient(135deg, #2196f3, #21cbf3);
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 1.8rem;
      margin-bottom: 1rem;
      transition: transform 0.3s ease;
    }
    .app-card:hover .app-icon {
      transform: scale(1.1);
    }
    .app-type-badge {
      position: absolute;
      top: 15px;
      right: 15px;
      font-size: 0.75rem;
      padding: 0.25rem 0.5rem;
      border-radius: 20px;
    }
    .favorite-btn {
      position: absolute;
      top: 15px;
      left: 15px;
      background: none;
      border: none;
      font-size: 1.2rem;
      color: #ffc107;
      opacity: 0.5;
      transition: opacity 0.3s ease;
    }
    .favorite-btn.active {
      opacity: 1;
    }
    .favorite-btn:hover {
      opacity: 1;
    }
    .app-stats {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 1rem;
      font-size: 0.85rem;
      color: #6c757d;
    }
    .search-box {
      position: relative;
      margin-bottom: 2rem;
    }
    .search-box input {
      padding-left: 45px;
      border-radius: 25px;
      border: 2px solid #e9ecef;
    }
    .search-box i {
      position: absolute;
      left: 15px;
      top: 50%;
      transform: translateY(-50%);
      color: #6c757d;
    }
    .filter-tabs {
      margin-bottom: 2rem;
    }
    .recent-activity {
      background: #f8f9fa;
      border-radius: 10px;
      padding: 1rem;
      margin-bottom: 1rem;
    }
    .activity-item {
      display: flex;
      align-items: center;
      padding: 0.5rem 0;
      border-bottom: 1px solid #e9ecef;
    }
    .activity-item:last-child {
      border-bottom: none;
    }
    .activity-icon {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      background: #e3f2fd;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-right: 1rem;
      color: #2196f3;
    }
    .sso-indicator {
      position: absolute;
      bottom: 15px;
      right: 15px;
      background: #28a745;
      color: white;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.8rem;
    }
    .quick-actions {
      position: fixed;
      bottom: 20px;
      right: 20px;
      z-index: 1000;
    }
    .fab {
      width: 56px;
      height: 56px;
      border-radius: 50%;
      background: linear-gradient(135deg, #2196f3, #21cbf3);
      color: white;
      border: none;
      box-shadow: 0 4px 12px rgba(33, 150, 243, 0.4);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.2rem;
      transition: all 0.3s ease;
    }
    .fab:hover {
      transform: scale(1.1);
      box-shadow: 0 6px 20px rgba(33, 150, 243, 0.6);
    }
    .app-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1.5rem;
    }
    .loading-skeleton {
      background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
      background-size: 200% 100%;
      animation: loading 1.5s infinite;
      border-radius: 8px;
    }
    @keyframes loading {
      0% { background-position: 200% 0; }
      100% { background-position: -200% 0; }
    }
  </style>
</head>
<body>
  <!-- Header -->
  <div class="account-header">
    <div class="container">
      <div class="row align-items-center">
        <div class="col-md-12 text-center">
          <h1><i class="bi bi-grid-3x3-gap me-2"></i>My Apps</h1>
          <p class="mb-0">Single sign-on to all your applications</p>
        </div>
      </div>
    </div>
  </div>

  <div class="container mt-4">
    <!-- Alert Messages -->
    <% if (typeof success !== 'undefined' && success) { %>
      <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle me-2"></i><%= success %>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>
    <% } %>
    <% if (typeof error !== 'undefined' && error) { %>
      <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-circle me-2"></i><%= error %>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>
    <% } %>

    <!-- Navigation Pills -->
    <ul class="nav nav-pills justify-content-center mb-4">
      <li class="nav-item">
        <a class="nav-link" href="/account">
          <i class="bi bi-house-door me-2"></i>Overview
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/profile">
          <i class="bi bi-person me-2"></i>Profile
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/security">
          <i class="bi bi-shield-check me-2"></i>Security
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/change-password">
          <i class="bi bi-key me-2"></i>Password
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link active" href="/apps">
          <i class="bi bi-grid-3x3-gap me-2"></i>Apps
        </a>
      </li>
    </ul>

    <!-- Search and Filters -->
    <div class="row">
      <div class="col-lg-8">
        <div class="search-box">
          <input type="text" class="form-control form-control-lg" placeholder="Search applications..." id="searchInput">
          <i class="bi bi-search"></i>
        </div>
      </div>
      <div class="col-lg-4">
        <select class="form-select form-select-lg" id="sortSelect">
          <option value="name">Sort by Name</option>
          <option value="recent">Recently Used</option>
          <option value="favorites">Favorites First</option>
          <option value="type">By Type</option>
        </select>
      </div>
    </div>

    <!-- Filter Tabs -->
    <div class="filter-tabs">
      <ul class="nav nav-tabs" id="filterTabs">
        <li class="nav-item">
          <a class="nav-link active" data-filter="all" href="#">
            <i class="bi bi-grid me-1"></i>All Apps (<span id="allCount">0</span>)
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" data-filter="favorites" href="#">
            <i class="bi bi-star me-1"></i>Favorites (<span id="favCount">0</span>)
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" data-filter="saml" href="#">
            <i class="bi bi-shield-lock me-1"></i>SAML (<span id="samlCount">0</span>)
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" data-filter="oauth" href="#">
            <i class="bi bi-key me-1"></i>OAuth (<span id="oauthCount">0</span>)
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" data-filter="recent" href="#">
            <i class="bi bi-clock me-1"></i>Recent (<span id="recentCount">0</span>)
          </a>
        </li>
      </ul>
    </div>

    <div class="row">
      <!-- Main Apps Grid -->
      <div class="col-lg-9">
        <!-- Loading State -->
        <div id="loadingState" class="app-grid">
          <% for(let i = 0; i < 6; i++) { %>
            <div class="card">
              <div class="card-body">
                <div class="loading-skeleton" style="height: 60px; width: 60px; margin-bottom: 1rem;"></div>
                <div class="loading-skeleton" style="height: 20px; margin-bottom: 0.5rem;"></div>
                <div class="loading-skeleton" style="height: 16px; width: 70%;"></div>
              </div>
            </div>
          <% } %>
        </div>

        <!-- Apps Grid -->
        <div id="appsGrid" class="app-grid" style="display: none;">
          <!-- Apps will be populated by JavaScript -->
        </div>

        <!-- No Apps Message -->
        <div id="noAppsMessage" class="text-center py-5" style="display: none;">
          <i class="bi bi-grid-3x3-gap" style="font-size: 4rem; color: #6c757d;"></i>
          <h4 class="mt-3 text-muted">No Applications Found</h4>
          <p class="text-muted">No applications match your current filter criteria.</p>
        </div>
      </div>

      <!-- Sidebar -->
      <div class="col-lg-3">
        <!-- Quick Stats -->
        <div class="card">
          <div class="card-header">
            <h6><i class="bi bi-bar-chart me-2"></i>Quick Stats</h6>
          </div>
          <div class="card-body">
            <div class="row text-center">
              <div class="col-6">
                <h4 class="text-primary" id="totalApps">-</h4>
                <small class="text-muted">Total Apps</small>
              </div>
              <div class="col-6">
                <h4 class="text-warning" id="favoriteApps">-</h4>
                <small class="text-muted">Favorites</small>
              </div>
            </div>
            <hr>
            <div class="row text-center">
              <div class="col-6">
                <h4 class="text-success" id="recentLogins">-</h4>
                <small class="text-muted">This Week</small>
              </div>
              <div class="col-6">
                <h4 class="text-info" id="ssoEnabled">-</h4>
                <small class="text-muted">SSO Ready</small>
              </div>
            </div>
          </div>
        </div>

        <!-- Recent Activity -->
        <div class="card">
          <div class="card-header">
            <h6><i class="bi bi-clock-history me-2"></i>Recent Activity</h6>
          </div>
          <div class="card-body p-0">
            <div id="recentActivity">
              <!-- Recent activity will be populated by JavaScript -->
            </div>
          </div>
        </div>

        <!-- Quick Actions -->
        <div class="card">
          <div class="card-header">
            <h6><i class="bi bi-lightning me-2"></i>Quick Actions</h6>
          </div>
          <div class="card-body">
            <div class="d-grid gap-2">
              <button class="btn btn-outline-primary btn-sm" onclick="refreshApps()">
                <i class="bi bi-arrow-clockwise me-2"></i>Refresh Apps
              </button>
              <button class="btn btn-outline-success btn-sm" onclick="exportApps()">
                <i class="bi bi-download me-2"></i>Export List
              </button>
              <a href="/account" class="btn btn-outline-secondary btn-sm">
                <i class="bi bi-speedometer2 me-2"></i>Dashboard
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Floating Action Button -->
  <div class="quick-actions">
    <button class="fab" onclick="refreshApps()" title="Refresh Applications">
      <i class="bi bi-arrow-clockwise"></i>
    </button>
  </div>

  <!-- App Details Modal -->
  <div class="modal fade" id="appModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="appModalTitle">Application Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body" id="appModalBody">
          <!-- App details will be populated dynamically -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="launchAppBtn">
            <i class="bi bi-box-arrow-up-right me-2"></i>Launch App
          </button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    let allApps = [];
    let filteredApps = [];
    let favorites = JSON.parse(localStorage.getItem('favoriteApps') || '[]');
    let currentFilter = 'all';

    // Initialize page
    document.addEventListener('DOMContentLoaded', function() {
      loadApplications();
      setupEventListeners();
    });

    function setupEventListeners() {
      // Search functionality
      document.getElementById('searchInput').addEventListener('input', debounce(filterApps, 300));
      
      // Sort functionality
      document.getElementById('sortSelect').addEventListener('change', sortApps);
      
      // Filter tabs
      document.querySelectorAll('[data-filter]').forEach(tab => {
        tab.addEventListener('click', function(e) {
          e.preventDefault();
          setActiveFilter(this.dataset.filter);
        });
      });
    }

    function loadApplications() {
      // Show loading state
      document.getElementById('loadingState').style.display = 'block';
      document.getElementById('appsGrid').style.display = 'none';
      
      // Fetch applications from server
      fetch('/api/applications')
        .then(response => response.json())
        .then(data => {
          allApps = data.applications || [];
          updateStats();
          renderApps();
          loadRecentActivity();
        })
        .catch(error => {
          console.error('Error loading applications:', error);
          showError('Failed to load applications');
        })
        .finally(() => {
          document.getElementById('loadingState').style.display = 'none';
          document.getElementById('appsGrid').style.display = 'grid';
        });
    }

    function renderApps() {
      const grid = document.getElementById('appsGrid');
      const noAppsMessage = document.getElementById('noAppsMessage');
      
      if (filteredApps.length === 0) {
        grid.style.display = 'none';
        noAppsMessage.style.display = 'block';
        return;
      }
      
      grid.style.display = 'grid';
      noAppsMessage.style.display = 'none';
      
      grid.innerHTML = filteredApps.map(app => `
        <div class="app-card ${favorites.includes(app.client_id) ? 'favorite' : ''}" 
             onclick="launchApp('${app.client_id}', '${app.login_url || ''}')"
             data-app-id="${app.client_id}">
          
          <button class="favorite-btn ${favorites.includes(app.client_id) ? 'active' : ''}" 
                  onclick="event.stopPropagation(); toggleFavorite('${app.client_id}')"
                  title="Add to favorites">
            <i class="bi bi-star${favorites.includes(app.client_id) ? '-fill' : ''}"></i>
          </button>
          
          <span class="app-type-badge badge bg-${getTypeBadgeColor(app.app_type)}">
            ${app.app_type || 'Unknown'}
          </span>
          
          <div class="app-icon">
            ${app.logo_uri ? `<img src="${app.logo_uri}" alt="${app.name}" style="width: 100%; height: 100%; object-fit: contain;">` : getAppIcon(app.name)}
          </div>
          
          <h6 class="fw-bold mb-1">${app.name}</h6>
          <p class="text-muted small mb-0">${app.description || 'No description available'}</p>
          
          <div class="app-stats">
            <small><i class="bi bi-calendar me-1"></i>Added ${formatDate(app.created_at)}</small>
            ${app.sso_disabled ? '' : '<div class="sso-indicator" title="SSO Enabled"><i class="bi bi-check"></i></div>'}
          </div>
        </div>
      `).join('');
    }

    function launchApp(clientId, loginUrl) {
      // Record app launch
      recordAppLaunch(clientId);
      
      // Launch the application
      if (loginUrl) {
        window.open(loginUrl, '_blank');
      } else {
        // Construct SSO URL
        const ssoUrl = \`https://${process.env.AUTH0_CUSTOM_DOMAIN || process.env.AUTH0_TENANT_DOMAIN}/authorize?client_id=\${clientId}&response_type=code&redirect_uri=\${encodeURIComponent(window.location.origin)}&scope=openid profile email\`;
        window.open(ssoUrl, '_blank');
      }
    }

    function toggleFavorite(clientId) {
      const index = favorites.indexOf(clientId);
      if (index > -1) {
        favorites.splice(index, 1);
      } else {
        favorites.push(clientId);
      }
      
      localStorage.setItem('favoriteApps', JSON.stringify(favorites));
      updateStats();
      renderApps();
      updateFilterCounts();
    }

    function filterApps() {
      const searchTerm = document.getElementById('searchInput').value.toLowerCase();
      
      filteredApps = allApps.filter(app => {
        const matchesSearch = !searchTerm || 
          app.name.toLowerCase().includes(searchTerm) ||
          (app.description && app.description.toLowerCase().includes(searchTerm));
        
        const matchesFilter = 
          currentFilter === 'all' ||
          (currentFilter === 'favorites' && favorites.includes(app.client_id)) ||
          (currentFilter === 'saml' && app.app_type === 'samlp') ||
          (currentFilter === 'oauth' && (app.app_type === 'spa' || app.app_type === 'regular_web')) ||
          (currentFilter === 'recent' && isRecentlyUsed(app.client_id));
        
        return matchesSearch && matchesFilter;
      });
      
      renderApps();
    }

    function setActiveFilter(filter) {
      currentFilter = filter;
      
      // Update active tab
      document.querySelectorAll('[data-filter]').forEach(tab => {
        tab.classList.remove('active');
      });
      document.querySelector(\`[data-filter="\${filter}"]\`).classList.add('active');
      
      filterApps();
    }

    function sortApps() {
      const sortBy = document.getElementById('sortSelect').value;
      
      filteredApps.sort((a, b) => {
        switch(sortBy) {
          case 'name':
            return a.name.localeCompare(b.name);
          case 'recent':
            return getLastUsed(b.client_id) - getLastUsed(a.client_id);
          case 'favorites':
            const aFav = favorites.includes(a.client_id);
            const bFav = favorites.includes(b.client_id);
            if (aFav && !bFav) return -1;
            if (!aFav && bFav) return 1;
            return a.name.localeCompare(b.name);
          case 'type':
            return (a.app_type || 'z').localeCompare(b.app_type || 'z');
          default:
            return 0;
        }
      });
      
      renderApps();
    }

    function updateStats() {
      document.getElementById('totalApps').textContent = allApps.length;
      document.getElementById('favoriteApps').textContent = favorites.length;
      document.getElementById('ssoEnabled').textContent = allApps.filter(app => !app.sso_disabled).length;
      
      updateFilterCounts();
    }

    function updateFilterCounts() {
      document.getElementById('allCount').textContent = allApps.length;
      document.getElementById('favCount').textContent = favorites.length;
      document.getElementById('samlCount').textContent = allApps.filter(app => app.app_type === 'samlp').length;
      document.getElementById('oauthCount').textContent = allApps.filter(app => app.app_type === 'spa' || app.app_type === 'regular_web').length;
      document.getElementById('recentCount').textContent = getRecentlyUsedApps().length;
    }

    function loadRecentActivity() {
      const recentApps = getRecentlyUsedApps().slice(0, 5);
      const activityHtml = recentApps.map(app => \`
        <div class="activity-item">
          <div class="activity-icon">
            <i class="bi bi-box-arrow-up-right"></i>
          </div>
          <div class="flex-grow-1">
            <div class="fw-bold small">\${app.name}</div>
            <div class="text-muted small">\${formatRelativeTime(getLastUsed(app.client_id))}</div>
          </div>
        </div>
      \`).join('');
      
      document.getElementById('recentActivity').innerHTML = activityHtml || '<div class="p-3 text-center text-muted small">No recent activity</div>';
    }

    function refreshApps() {
      loadApplications();
    }

    function exportApps() {
      const csvContent = "data:text/csv;charset=utf-8," + 
        "Name,Type,Description,Created\\n" +
        allApps.map(app => \`"\${app.name}","\${app.app_type}","\${app.description || ''}","\${app.created_at}"\`).join("\\n");
      
      const encodedUri = encodeURI(csvContent);
      const link = document.createElement("a");
      link.setAttribute("href", encodedUri);
      link.setAttribute("download", "applications.csv");
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }

    // Utility functions
    function getAppIcon(name) {
      const icons = {
        'slack': 'bi-slack',
        'github': 'bi-github',
        'google': 'bi-google',
        'microsoft': 'bi-microsoft',
        'zoom': 'bi-camera-video',
        'salesforce': 'bi-cloud',
        'jira': 'bi-bug',
        'confluence': 'bi-file-text'
      };
      
      const iconClass = Object.keys(icons).find(key => name.toLowerCase().includes(key));
      return iconClass ? \`<i class="bi \${icons[iconClass]}"></i>\` : \`<i class="bi bi-app"></i>\`;
    }

    function getTypeBadgeColor(type) {
      const colors = {
        'samlp': 'primary',
        'spa': 'success', 
        'regular_web': 'info',
        'native': 'warning',
        'm2m': 'secondary'
      };
      return colors[type] || 'dark';
    }

    function formatDate(dateString) {
      return new Date(dateString).toLocaleDateString();
    }

    function formatRelativeTime(timestamp) {
      const now = Date.now();
      const diff = now - timestamp;
      
      if (diff < 60000) return 'Just now';
      if (diff < 3600000) return \`\${Math.floor(diff / 60000)}m ago\`;
      if (diff < 86400000) return \`\${Math.floor(diff / 3600000)}h ago\`;
      return \`\${Math.floor(diff / 86400000)}d ago\`;
    }

    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }

    function recordAppLaunch(clientId) {
      const launches = JSON.parse(localStorage.getItem('appLaunches') || '{}');
      launches[clientId] = Date.now();
      localStorage.setItem('appLaunches', JSON.stringify(launches));
    }

    function getLastUsed(clientId) {
      const launches = JSON.parse(localStorage.getItem('appLaunches') || '{}');
      return launches[clientId] || 0;
    }

    function isRecentlyUsed(clientId) {
      const lastUsed = getLastUsed(clientId);
      return lastUsed > (Date.now() - 7 * 24 * 60 * 60 * 1000); // Last 7 days
    }

    function getRecentlyUsedApps() {
      return allApps.filter(app => isRecentlyUsed(app.client_id))
                   .sort((a, b) => getLastUsed(b.client_id) - getLastUsed(a.client_id));
    }

    function showError(message) {
      const alertHtml = \`
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          <i class="bi bi-exclamation-circle me-2"></i>\${message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
      \`;
      document.querySelector('.container').insertAdjacentHTML('afterbegin', alertHtml);
    }

    // Initialize with filtered apps
    filteredApps = allApps;
    filterApps();
  </script>
</body>
</html>
